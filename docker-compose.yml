version: '3'

services:
  mysql:
   
    build: 
      context: ./mysql
      dockerfile: Dockerfile.mysql
      args:
        - IMAGE_TAG=my-mysql:latest
    container_name: my-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=E-BANK
    ports:
      - 3306:3306
    volumes:
      - dockerAngularSpringDatabaseData:/var/lib/mysql
    networks:
      - backendNetwork

  backend:  
   build:
      context: ./BACKEND
      dockerfile: Dockerfile
      
    container_name: my-backend
    ports:
      - 8086:8086
    restart: unless-stopped   
    depends_on:
      - mysql
    networks:
      - backendNetwork
      - frontendNetwork

  frontend:
   build:
      context: ./FRONTEND
      dockerfile: Dockerfile
      
    container_name: my-frontend
    restart: unless-stopped
    ports: 
      - 4200:80
    depends_on:
      - backend  # Use the lowercase service name 'backend'
    networks:
      - frontendNetwork
  nginx:
    image: nginx:latest
    container_name: my-nginx
    restart: unless-stopped
    ports:
      - 80:80  # Redirige le port 80 du conteneur Nginx vers le port 80 de l'h√¥te
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Montez votre propre configuration Nginx
    depends_on:
      - frontend
    networks:
      - frontendNetwork
volumes:
  dockerAngularSpringDatabaseData:

networks:
  backendNetwork:
  frontendNetwork: 
